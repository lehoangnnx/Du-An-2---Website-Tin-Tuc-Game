package com.javaweb.model;
// Generated Oct 15, 2017 3:20:39 PM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "duan2_webapplication_tintucgame", uniqueConstraints = {
		@UniqueConstraint(columnNames = "email"), @UniqueConstraint(columnNames = "user_name") })
public class Users implements java.io.Serializable {

	private int userId;
	private Roles roles;
	private String userName;
	private String pasword;
	private String email;
	private String firstName;
	private String lastName;
	private byte status;
	private Date createdDate;
	private String phoneNumber;
	private byte isOnline;
	private String ip;
	private Date loggedInDate;
	private String description;
	private Set<Article> articles = new HashSet<Article>(0);
	private Set<CommentLikeForum> commentLikeForums = new HashSet<CommentLikeForum>(0);
	private Set<ArticleForum> articleForums = new HashSet<ArticleForum>(0);
	private Set<ArticleLikeForum> articleLikeForums = new HashSet<ArticleLikeForum>(0);
	private Set<ArticleLike> articleLikes = new HashSet<ArticleLike>(0);
	private Set<GameReviews> gameReviewses = new HashSet<GameReviews>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<CommentForum> commentForums = new HashSet<CommentForum>(0);
	private Set<CommentLike> commentLikes = new HashSet<CommentLike>(0);

	public Users() {
	}

	public Users(int userId, Roles roles, String userName, String pasword, String email, byte status, Date createdDate,
			byte isOnline, Date loggedInDate) {
		this.userId = userId;
		this.roles = roles;
		this.userName = userName;
		this.pasword = pasword;
		this.email = email;
		this.status = status;
		this.createdDate = createdDate;
		this.isOnline = isOnline;
		this.loggedInDate = loggedInDate;
	}

	public Users(int userId, Roles roles, String userName, String pasword, String email, String firstName,
			String lastName, byte status, Date createdDate, String phoneNumber, byte isOnline, String ip,
			Date loggedInDate, String description, Set<Article> articles, Set<CommentLikeForum> commentLikeForums,
			Set<ArticleForum> articleForums, Set<ArticleLikeForum> articleLikeForums, Set<ArticleLike> articleLikes,
			Set<GameReviews> gameReviewses, Set<Comment> comments, Set<CommentForum> commentForums,
			Set<CommentLike> commentLikes) {
		this.userId = userId;
		this.roles = roles;
		this.userName = userName;
		this.pasword = pasword;
		this.email = email;
		this.firstName = firstName;
		this.lastName = lastName;
		this.status = status;
		this.createdDate = createdDate;
		this.phoneNumber = phoneNumber;
		this.isOnline = isOnline;
		this.ip = ip;
		this.loggedInDate = loggedInDate;
		this.description = description;
		this.articles = articles;
		this.commentLikeForums = commentLikeForums;
		this.articleForums = articleForums;
		this.articleLikeForums = articleLikeForums;
		this.articleLikes = articleLikes;
		this.gameReviewses = gameReviewses;
		this.comments = comments;
		this.commentForums = commentForums;
		this.commentLikes = commentLikes;
	}

	@Id

	@Column(name = "user_id", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id", nullable = false)
	public Roles getRoles() {
		return this.roles;
	}

	public void setRoles(Roles roles) {
		this.roles = roles;
	}

	@Column(name = "user_name", unique = true, nullable = false, length = 50)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "pasword", nullable = false, length = 70)
	public String getPasword() {
		return this.pasword;
	}

	public void setPasword(String pasword) {
		this.pasword = pasword;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "first_name")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name")
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "status", nullable = false)
	public byte getStatus() {
		return this.status;
	}

	public void setStatus(byte status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "phone_number", length = 25)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "is_online", nullable = false)
	public byte getIsOnline() {
		return this.isOnline;
	}

	public void setIsOnline(byte isOnline) {
		this.isOnline = isOnline;
	}

	@Column(name = "ip", length = 50)
	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "logged_in_date", nullable = false, length = 19)
	public Date getLoggedInDate() {
		return this.loggedInDate;
	}

	public void setLoggedInDate(Date loggedInDate) {
		this.loggedInDate = loggedInDate;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Article> getArticles() {
		return this.articles;
	}

	public void setArticles(Set<Article> articles) {
		this.articles = articles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<CommentLikeForum> getCommentLikeForums() {
		return this.commentLikeForums;
	}

	public void setCommentLikeForums(Set<CommentLikeForum> commentLikeForums) {
		this.commentLikeForums = commentLikeForums;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<ArticleForum> getArticleForums() {
		return this.articleForums;
	}

	public void setArticleForums(Set<ArticleForum> articleForums) {
		this.articleForums = articleForums;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<ArticleLikeForum> getArticleLikeForums() {
		return this.articleLikeForums;
	}

	public void setArticleLikeForums(Set<ArticleLikeForum> articleLikeForums) {
		this.articleLikeForums = articleLikeForums;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<ArticleLike> getArticleLikes() {
		return this.articleLikes;
	}

	public void setArticleLikes(Set<ArticleLike> articleLikes) {
		this.articleLikes = articleLikes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<GameReviews> getGameReviewses() {
		return this.gameReviewses;
	}

	public void setGameReviewses(Set<GameReviews> gameReviewses) {
		this.gameReviewses = gameReviewses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<CommentForum> getCommentForums() {
		return this.commentForums;
	}

	public void setCommentForums(Set<CommentForum> commentForums) {
		this.commentForums = commentForums;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<CommentLike> getCommentLikes() {
		return this.commentLikes;
	}

	public void setCommentLikes(Set<CommentLike> commentLikes) {
		this.commentLikes = commentLikes;
	}

}
