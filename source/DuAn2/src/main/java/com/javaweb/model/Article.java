package com.javaweb.model;
// Generated Oct 15, 2017 3:20:39 PM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Article generated by hbm2java
 */
@Entity
@Table(name = "article", catalog = "duan2_webapplication_tintucgame", uniqueConstraints = {
		@UniqueConstraint(columnNames = "slug"), @UniqueConstraint(columnNames = "title") })
public class Article implements java.io.Serializable {

	private Integer articleId;
	private ArticleCategory articleCategory;
	private Users users;
	private Integer gameId;
	private String title;
	private String slug;
	private String subContent;
	private String mainContent;
	private String author;
	private String imagesThumbnail;
	private String imagesList;
	private String video;
	private String status;
	private long views;
	private String createdDate;
	private Date modifiedDate;
	private Integer modifiedUserId;
	private Date activateDate;
	private Integer activateUserId;
	private Date showDate;
	private String allowComment;
	private Byte isHot;
	private String linkSource;
	private Set<Tags> tagses = new HashSet<Tags>(0);
	private Set<ArticleLike> articleLikes = new HashSet<ArticleLike>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Article() {
	}

	public Article(ArticleCategory articleCategory, Users users, String title, String slug, String subContent,
			String mainContent, String author, String status, long views, String createdDate) {
		this.articleCategory = articleCategory;
		this.users = users;
		this.title = title;
		this.slug = slug;
		this.subContent = subContent;
		this.mainContent = mainContent;
		this.author = author;
		this.status = status;
		this.views = views;
		this.createdDate = createdDate;
	}

	public Article(ArticleCategory articleCategory, Users users, Integer gameId, String title, String slug,
			String subContent, String mainContent, String author, String imagesThumbnail, String imagesList,
			String video, String status, long views, String createdDate, Date modifiedDate, Integer modifiedUserId,
			Date activateDate, Integer activateUserId, Date showDate, String allowComment, Byte isHot,
			String linkSource, Set<Tags> tagses, Set<ArticleLike> articleLikes, Set<Comment> comments) {
		this.articleCategory = articleCategory;
		this.users = users;
		this.gameId = gameId;
		this.title = title;
		this.slug = slug;
		this.subContent = subContent;
		this.mainContent = mainContent;
		this.author = author;
		this.imagesThumbnail = imagesThumbnail;
		this.imagesList = imagesList;
		this.video = video;
		this.status = status;
		this.views = views;
		this.createdDate = createdDate;
		this.modifiedDate = modifiedDate;
		this.modifiedUserId = modifiedUserId;
		this.activateDate = activateDate;
		this.activateUserId = activateUserId;
		this.showDate = showDate;
		this.allowComment = allowComment;
		this.isHot = isHot;
		this.linkSource = linkSource;
		this.tagses = tagses;
		this.articleLikes = articleLikes;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "article_id", unique = true, nullable = false)
	public Integer getArticleId() {
		return this.articleId;
	}

	public void setArticleId(Integer articleId) {
		this.articleId = articleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "article_category_id", nullable = false)
	public ArticleCategory getArticleCategory() {
		return this.articleCategory;
	}

	public void setArticleCategory(ArticleCategory articleCategory) {
		this.articleCategory = articleCategory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "game_id")
	public Integer getGameId() {
		return this.gameId;
	}

	public void setGameId(Integer gameId) {
		this.gameId = gameId;
	}

	@Column(name = "title", unique = true, nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "slug", unique = true, nullable = false)
	public String getSlug() {
		return this.slug;
	}

	public void setSlug(String slug) {
		this.slug = slug;
	}

	@Column(name = "sub_content", nullable = false, length = 4000)
	public String getSubContent() {
		return this.subContent;
	}

	public void setSubContent(String subContent) {
		this.subContent = subContent;
	}

	@Column(name = "main_content", nullable = false, length = 65535)
	public String getMainContent() {
		return this.mainContent;
	}

	public void setMainContent(String mainContent) {
		this.mainContent = mainContent;
	}

	@Column(name = "author", nullable = false)
	public String getAuthor() {
		return this.author;
	}

	public void setAuthor(String author) {
		this.author = author;
	}

	@Column(name = "images_thumbnail", length = 65535)
	public String getImagesThumbnail() {
		return this.imagesThumbnail;
	}

	public void setImagesThumbnail(String imagesThumbnail) {
		this.imagesThumbnail = imagesThumbnail;
	}

	@Column(name = "images_list", length = 65535)
	public String getImagesList() {
		return this.imagesList;
	}

	public void setImagesList(String imagesList) {
		this.imagesList = imagesList;
	}

	@Column(name = "video", length = 65535)
	public String getVideo() {
		return this.video;
	}

	public void setVideo(String video) {
		this.video = video;
	}

	@Column(name = "status", nullable = false, length = 8)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "views", nullable = false)
	public long getViews() {
		return this.views;
	}

	public void setViews(long views) {
		this.views = views;
	}

	@Column(name = "created_date", nullable = false, length = 45)
	public String getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(String createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_date", length = 19)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@Column(name = "modified_user_id")
	public Integer getModifiedUserId() {
		return this.modifiedUserId;
	}

	public void setModifiedUserId(Integer modifiedUserId) {
		this.modifiedUserId = modifiedUserId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "activate_date", length = 19)
	public Date getActivateDate() {
		return this.activateDate;
	}

	public void setActivateDate(Date activateDate) {
		this.activateDate = activateDate;
	}

	@Column(name = "activate_user_id")
	public Integer getActivateUserId() {
		return this.activateUserId;
	}

	public void setActivateUserId(Integer activateUserId) {
		this.activateUserId = activateUserId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "show_date", length = 19)
	public Date getShowDate() {
		return this.showDate;
	}

	public void setShowDate(Date showDate) {
		this.showDate = showDate;
	}

	@Column(name = "allow_comment", length = 6)
	public String getAllowComment() {
		return this.allowComment;
	}

	public void setAllowComment(String allowComment) {
		this.allowComment = allowComment;
	}

	@Column(name = "is_hot")
	public Byte getIsHot() {
		return this.isHot;
	}

	public void setIsHot(Byte isHot) {
		this.isHot = isHot;
	}

	@Column(name = "link_source", length = 65535)
	public String getLinkSource() {
		return this.linkSource;
	}

	public void setLinkSource(String linkSource) {
		this.linkSource = linkSource;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_tag", catalog = "duan2_webapplication_tintucgame", joinColumns = {
			@JoinColumn(name = "article_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "tag_id", nullable = false, updatable = false) })
	public Set<Tags> getTagses() {
		return this.tagses;
	}

	public void setTagses(Set<Tags> tagses) {
		this.tagses = tagses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "article")
	public Set<ArticleLike> getArticleLikes() {
		return this.articleLikes;
	}

	public void setArticleLikes(Set<ArticleLike> articleLikes) {
		this.articleLikes = articleLikes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "article")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

}
