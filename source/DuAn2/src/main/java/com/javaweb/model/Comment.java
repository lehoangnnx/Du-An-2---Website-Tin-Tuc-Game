package com.javaweb.model;
// Generated Nov 1, 2017 9:10:59 PM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name = "comment", catalog = "duan2_webapplication_tintucgame")
public class Comment implements java.io.Serializable {

	private Integer commentId;
	private Article article;
	private Users users;
	private Integer subCommentId;
	private String content;
	private Date createdDate;
	private Date modifiedDate;
	private String status;
	private String ip;
	private String description;
	private Set<CommentLike> commentLikes = new HashSet<CommentLike>(0);
	private Set<CommentLike> commentLikes_1 = new HashSet<CommentLike>(0);

	public Comment() {
	}

	public Comment(Article article, Users users, String content, Date createdDate, String status) {
		this.article = article;
		this.users = users;
		this.content = content;
		this.createdDate = createdDate;
		this.status = status;
	}

	public Comment(Article article, Users users, Integer subCommentId, String content, Date createdDate,
			Date modifiedDate, String status, String ip, String description, Set<CommentLike> commentLikes,
			Set<CommentLike> commentLikes_1) {
		this.article = article;
		this.users = users;
		this.subCommentId = subCommentId;
		this.content = content;
		this.createdDate = createdDate;
		this.modifiedDate = modifiedDate;
		this.status = status;
		this.ip = ip;
		this.description = description;
		this.commentLikes = commentLikes;
		this.commentLikes_1 = commentLikes_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "comment_id", unique = true, nullable = false)
	public Integer getCommentId() {
		return this.commentId;
	}

	public void setCommentId(Integer commentId) {
		this.commentId = commentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "article_id", nullable = false)
	public Article getArticle() {
		return this.article;
	}

	public void setArticle(Article article) {
		this.article = article;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "sub_comment_id")
	public Integer getSubCommentId() {
		return this.subCommentId;
	}

	public void setSubCommentId(Integer subCommentId) {
		this.subCommentId = subCommentId;
	}

	@Column(name = "content", nullable = false, length = 65535)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_date", length = 19)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@Column(name = "status", nullable = false, length = 8)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "ip", length = 50)
	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comment")
	public Set<CommentLike> getCommentLikes() {
		return this.commentLikes;
	}

	public void setCommentLikes(Set<CommentLike> commentLikes) {
		this.commentLikes = commentLikes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comment")
	public Set<CommentLike> getCommentLikes_1() {
		return this.commentLikes_1;
	}

	public void setCommentLikes_1(Set<CommentLike> commentLikes_1) {
		this.commentLikes_1 = commentLikes_1;
	}

}
